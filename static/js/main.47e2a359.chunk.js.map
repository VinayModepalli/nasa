{"version":3,"sources":["components/Navbar.js","components/Home.js","API.js","components/Apod.js","components/Neows.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","class","to","className","src","width","height","alt","loading","type","data-toggle","data-target","aria-control","aria-expanded","aria-label","id","href","target","Home","API","Apod","state","date","exp","title","hdurl","url","cr","componentDidMount","fetch","then","response","json","data","setState","explanation","copyright","console","log","this","Component","APOD","App","exact","path","component","Neows","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.47e2a359.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nconst Navbar = () => {\r\n    return (\r\n        <nav class=\"navbar navbar-expand-lg navbar-dark\">\r\n            <Link to=\"/\" className=\"navbar-brand pl-5\">\r\n                <img src=\"nasa.png\" width=\"50\" height=\"50\" alt=\"\" loading=\"lazy\" />\r\n            </Link>\r\n      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-control=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div class=\"collapse navbar-collapse \" id=\"navbarNav\">\r\n        <ul class=\"navbar-nav ml-auto\">\r\n          <li class=\"navbar-item px-3 active\">\r\n            <a href=\"#\" class=\"nav-link\">Home <span class=\"sr-only\">(Current)</span></a>\r\n          </li>\r\n          <li class=\"navbar-item px-3 \">\r\n          <button className=\"btn btn-outline-warning my-2 my-sm-0\" type=\"submit\"><a href=\"https://blog.vinaykumar.tech\" target=\"_blank\">Blog</a></button>\r\n          </li>\r\n          <li class=\"navbar-item px-3 \">\r\n            <button className=\"btn btn-outline-primary my-2 my-sm-0\" type=\"submit\"><a href=\"https://www.facebook.com/vinay.modepalli\" target=\"_blank\">Facebook</a></button>\r\n          </li>\r\n          <li class=\"navbar-item px-3 \">\r\n          <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\"><a href=\"https://github.com/vinaymodepalli\" target=\"_blank\">GitHub</a></button>\r\n          </li>\r\n        </ul>\r\n        \r\n        \r\n      </div>  \r\n    </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-center\">Home</h1>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n\r\n\r\n                <div className=\"col-lg-4 col-md-6 d-flex justify-content-center animate__animated animate__zoomIn\">\r\n                    <div className=\"card text-white bg-transparent border-primary mb-4\">\r\n                        <div className=\"card-body\">\r\n                            <h3 className=\"card-title\"><Link to=\"/apod\" className=\"react-link\" >APOD</Link></h3>\r\n                            <h5 className=\"card-sub-heading\">Astronomy Picture of the Day</h5>\r\n                            <p className=\"card-text\">APOD is one of the most popular websites at NASA, which features amazing planetary imagery.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-lg-4 col-md-6 d-flex justify-content-center animate__animated animate__zoomIn\">\r\n                    <div className=\"card text-white bg-transparent border-primary mb-4\">\r\n                        <div className=\"card-body\">\r\n                            <h3 className=\"card-title\"><Link to=\"/neows\" className=\"react-link\" >Asteroids NeoWs</Link></h3>\r\n                            <h5 className=\"card-sub-heading\">Near Earth Object Web Service</h5>\r\n                            <p className=\"card-text\">Find the information about Asteroids which are nearer to earth, and their closest approach date.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                        \r\n\r\n\r\n                    \r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","const API = 'z6Zt9XZfUE8QgGkGaDizd0dLgj4z3gSyAKKsI13a'\r\n\r\nconst exReq = 'https://api.nasa.gov/planetary/apod?api_key=z6Zt9XZfUE8QgGkGaDizd0dLgj4z3gSyAKKsI13a'\r\n\r\nconst accEmail = 'hackerman@gmail.com'\r\nconst accID = '0a4d448b-0ae4-4959-8d18-d83de6f4cb53'\r\n\r\nexport default API;","import React, {Component} from 'react'\r\nimport API from '../API'\r\n\r\nclass Apod extends Component {\r\n    state = {\r\n        date: null,\r\n        exp: null,\r\n        title: null,\r\n        hdurl: null,\r\n        url: null,\r\n        cr: null\r\n    }\r\n    componentDidMount = () => {\r\n        fetch(`https://api.nasa.gov/planetary/apod?api_key=${API}`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({\r\n        date: data.date,\r\n        exp: data.explanation,\r\n        title: data.title,\r\n        hdurl: data.hdurl,\r\n        url: data.url,\r\n        cr: data.copyright\r\n       }));\r\n\r\n      console.log(this.state)\r\n    }\r\n    render () {\r\n        if (this.state.title) return (\r\n            <div className=\"\" >\r\n                <h1 className=\"text-center main-heading animate__animated animate__fadeIn p-1\">Astronomy Picture Of The Day</h1>\r\n                <h2 className=\"text-center second-heading p-3\">{this.state.title}</h2>\r\n                <div className=\"container p-1 animate__animated animate__zoomIn\">\r\n                    <img src={this.state.url} alt=\"\" className=\"img-fluid rounded mx-auto d-block\"/>    \r\n                </div>\r\n                <p className=\" p-1 pt-4 text-justify content animate__animated animate__fadeInUp\">{this.state.exp}</p>\r\n                <p className=\"text-justify p-3 copyright\">Copyright: {this.state.cr}</p>\r\n            </div>\r\n        )\r\n        else return (\r\n            <div>\r\n                <p className=\"text-center\">Loading</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Apod","import React, {Component} from 'react'\r\nimport API from '../API'\r\n\r\nclass APOD extends Component {\r\n    state = {\r\n        date: null,\r\n        exp: null,\r\n        title: null,\r\n        hdurl: null,\r\n        url: null,\r\n        cr: null\r\n    }\r\n    componentDidMount = () => {\r\n        fetch(`https://api.nasa.gov/planetary/apod?api_key=${API}`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({\r\n        date: data.date,\r\n        exp: data.explanation,\r\n        title: data.title,\r\n        hdurl: data.hdurl,\r\n        url: data.url,\r\n        cr: data.copyright\r\n       }));\r\n\r\n      console.log(this.state)\r\n    }\r\n    render () {\r\n        if (this.state.title) return (\r\n            <div className=\"\" >\r\n                <h1 className=\"text-center main-heading animate__animated animate__fadeIn p-1\">Astronomy Picture Of The Day</h1>\r\n                <h2 className=\"text-center second-heading p-3\">{this.state.title}</h2>\r\n                <div className=\"container p-1 animate__animated animate__zoomIn\">\r\n                    <img src={this.state.url} alt=\"\" className=\"img-fluid rounded mx-auto d-block\"/>    \r\n                </div>\r\n                <p className=\" p-1 pt-4 text-justify content animate__animated animate__fadeInUp\">{this.state.exp}</p>\r\n                <p className=\"text-justify p-3 copyright\">Copyright: {this.state.cr}</p>\r\n            </div>\r\n        )\r\n        else return (\r\n            <div>\r\n                <p className=\"text-center\">Loading</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default APOD","import React from 'react';\nimport Navbar from './components/Navbar'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from './components/Home'\nimport Apod from './components/Apod';\nimport Neows from './components/Neows';\nconst App = () => {\n  return (\n    <div>\n      <div className=\"container\">\n        <BrowserRouter>\n        <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path = \"/apod\" component={Apod} />\n            <Route path = \"/neows\" component={Neows} />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    </div>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}